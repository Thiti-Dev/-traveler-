// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: statistic.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTotalUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUser int64 `protobuf:"varint,1,opt,name=total_user,json=totalUser,proto3" json:"total_user,omitempty"`
}

func (x *GetTotalUserResponse) Reset() {
	*x = GetTotalUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalUserResponse) ProtoMessage() {}

func (x *GetTotalUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statistic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalUserResponse.ProtoReflect.Descriptor instead.
func (*GetTotalUserResponse) Descriptor() ([]byte, []int) {
	return file_statistic_proto_rawDescGZIP(), []int{0}
}

func (x *GetTotalUserResponse) GetTotalUser() int64 {
	if x != nil {
		return x.TotalUser
	}
	return 0
}

type GetTotalSolvedThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSolvedThread int64 `protobuf:"varint,1,opt,name=total_solved_thread,json=totalSolvedThread,proto3" json:"total_solved_thread,omitempty"`
}

func (x *GetTotalSolvedThreadResponse) Reset() {
	*x = GetTotalSolvedThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalSolvedThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalSolvedThreadResponse) ProtoMessage() {}

func (x *GetTotalSolvedThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statistic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalSolvedThreadResponse.ProtoReflect.Descriptor instead.
func (*GetTotalSolvedThreadResponse) Descriptor() ([]byte, []int) {
	return file_statistic_proto_rawDescGZIP(), []int{1}
}

func (x *GetTotalSolvedThreadResponse) GetTotalSolvedThread() int64 {
	if x != nil {
		return x.TotalSolvedThread
	}
	return 0
}

type GetTotalTravelerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTravler int64 `protobuf:"varint,1,opt,name=total_travler,json=totalTravler,proto3" json:"total_travler,omitempty"`
}

func (x *GetTotalTravelerResponse) Reset() {
	*x = GetTotalTravelerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statistic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalTravelerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalTravelerResponse) ProtoMessage() {}

func (x *GetTotalTravelerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statistic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalTravelerResponse.ProtoReflect.Descriptor instead.
func (*GetTotalTravelerResponse) Descriptor() ([]byte, []int) {
	return file_statistic_proto_rawDescGZIP(), []int{2}
}

func (x *GetTotalTravelerResponse) GetTotalTravler() int64 {
	if x != nil {
		return x.TotalTravler
	}
	return 0
}

var File_statistic_proto protoreflect.FileDescriptor

var file_statistic_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x22, 0x4e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x22, 0x3f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x76, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x76, 0x6c, 0x65,
	0x72, 0x32, 0x8b, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_statistic_proto_rawDescOnce sync.Once
	file_statistic_proto_rawDescData = file_statistic_proto_rawDesc
)

func file_statistic_proto_rawDescGZIP() []byte {
	file_statistic_proto_rawDescOnce.Do(func() {
		file_statistic_proto_rawDescData = protoimpl.X.CompressGZIP(file_statistic_proto_rawDescData)
	})
	return file_statistic_proto_rawDescData
}

var file_statistic_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_statistic_proto_goTypes = []interface{}{
	(*GetTotalUserResponse)(nil),         // 0: traveller.GetTotalUserResponse
	(*GetTotalSolvedThreadResponse)(nil), // 1: traveller.GetTotalSolvedThreadResponse
	(*GetTotalTravelerResponse)(nil),     // 2: traveller.GetTotalTravelerResponse
	(*emptypb.Empty)(nil),                // 3: google.protobuf.Empty
}
var file_statistic_proto_depIdxs = []int32{
	3, // 0: traveller.StatisticService.GetTotalUser:input_type -> google.protobuf.Empty
	3, // 1: traveller.StatisticService.GetTotalSolvedThread:input_type -> google.protobuf.Empty
	3, // 2: traveller.StatisticService.GetTotalTraveler:input_type -> google.protobuf.Empty
	0, // 3: traveller.StatisticService.GetTotalUser:output_type -> traveller.GetTotalUserResponse
	1, // 4: traveller.StatisticService.GetTotalSolvedThread:output_type -> traveller.GetTotalSolvedThreadResponse
	2, // 5: traveller.StatisticService.GetTotalTraveler:output_type -> traveller.GetTotalTravelerResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_statistic_proto_init() }
func file_statistic_proto_init() {
	if File_statistic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_statistic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalSolvedThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statistic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalTravelerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statistic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_statistic_proto_goTypes,
		DependencyIndexes: file_statistic_proto_depIdxs,
		MessageInfos:      file_statistic_proto_msgTypes,
	}.Build()
	File_statistic_proto = out.File
	file_statistic_proto_rawDesc = nil
	file_statistic_proto_goTypes = nil
	file_statistic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatisticServiceClient is the client API for StatisticService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatisticServiceClient interface {
	GetTotalUser(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalUserResponse, error)
	GetTotalSolvedThread(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalSolvedThreadResponse, error)
	GetTotalTraveler(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalTravelerResponse, error)
}

type statisticServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatisticServiceClient(cc grpc.ClientConnInterface) StatisticServiceClient {
	return &statisticServiceClient{cc}
}

func (c *statisticServiceClient) GetTotalUser(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalUserResponse, error) {
	out := new(GetTotalUserResponse)
	err := c.cc.Invoke(ctx, "/traveller.StatisticService/GetTotalUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticServiceClient) GetTotalSolvedThread(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalSolvedThreadResponse, error) {
	out := new(GetTotalSolvedThreadResponse)
	err := c.cc.Invoke(ctx, "/traveller.StatisticService/GetTotalSolvedThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticServiceClient) GetTotalTraveler(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTotalTravelerResponse, error) {
	out := new(GetTotalTravelerResponse)
	err := c.cc.Invoke(ctx, "/traveller.StatisticService/GetTotalTraveler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatisticServiceServer is the server API for StatisticService service.
type StatisticServiceServer interface {
	GetTotalUser(context.Context, *emptypb.Empty) (*GetTotalUserResponse, error)
	GetTotalSolvedThread(context.Context, *emptypb.Empty) (*GetTotalSolvedThreadResponse, error)
	GetTotalTraveler(context.Context, *emptypb.Empty) (*GetTotalTravelerResponse, error)
}

// UnimplementedStatisticServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatisticServiceServer struct {
}

func (*UnimplementedStatisticServiceServer) GetTotalUser(context.Context, *emptypb.Empty) (*GetTotalUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotalUser not implemented")
}
func (*UnimplementedStatisticServiceServer) GetTotalSolvedThread(context.Context, *emptypb.Empty) (*GetTotalSolvedThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotalSolvedThread not implemented")
}
func (*UnimplementedStatisticServiceServer) GetTotalTraveler(context.Context, *emptypb.Empty) (*GetTotalTravelerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotalTraveler not implemented")
}

func RegisterStatisticServiceServer(s *grpc.Server, srv StatisticServiceServer) {
	s.RegisterService(&_StatisticService_serviceDesc, srv)
}

func _StatisticService_GetTotalUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticServiceServer).GetTotalUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/traveller.StatisticService/GetTotalUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticServiceServer).GetTotalUser(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticService_GetTotalSolvedThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticServiceServer).GetTotalSolvedThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/traveller.StatisticService/GetTotalSolvedThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticServiceServer).GetTotalSolvedThread(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticService_GetTotalTraveler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticServiceServer).GetTotalTraveler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/traveller.StatisticService/GetTotalTraveler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticServiceServer).GetTotalTraveler(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatisticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "traveller.StatisticService",
	HandlerType: (*StatisticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTotalUser",
			Handler:    _StatisticService_GetTotalUser_Handler,
		},
		{
			MethodName: "GetTotalSolvedThread",
			Handler:    _StatisticService_GetTotalSolvedThread_Handler,
		},
		{
			MethodName: "GetTotalTraveler",
			Handler:    _StatisticService_GetTotalTraveler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "statistic.proto",
}
